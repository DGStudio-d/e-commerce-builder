services:
  app:
    image: e-builder:latest
    container_name: ebuilder_app
    restart: unless-stopped
    ports:
      - "8087:80"
    networks:
      - monitoring

  prometheus:
    build: ./prometheus
    image: ebuilder_prometheus:latest
    container_name: ebuilder_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: ebuilder_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: ebuilder_cadvisor
    restart: unless-stopped
    ports:
      - "8082:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring

  jenkins-blueocean:
    image: jenkins/jenkins:lts
    container_name: jenkins-blueocean
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: ebuilder_node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitoring

  # SonarQube + Postgres for local code quality analysis
  sonarqube:
    image: sonarqube:community
    container_name: ebuilder_sonarqube
    restart: unless-stopped
    depends_on:
      - sonar-db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000" # UI at http://localhost:9000
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    networks:
      - monitoring

  sonar-db:
    image: postgres:15
    container_name: ebuilder_sonar_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    networks:
      - monitoring
  registry:
    image: registry:2
    container_name: ebuilder_registry
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - monitoring

volumes:
  grafana_data:
  jenkins_home:
  sonar_data:
  sonar_extensions:
  sonar_logs:
  sonar_db_data:

networks:
  monitoring:
    driver: bridge
